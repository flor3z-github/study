b handle_signal 
file
file sig.c 
file sig
file sig32
p system
p signal
handle SIGINT nostop pass
r
q
handle SIGINT nostop pass
r
bt
q
r
bt
q
b handle_signal 
r
q
pd vuln
pd main
b *main+0
r
pd execve
set eip
set $eip
set $eip=*0xf76357e0
i r eip
set $eip=0xf76357e0
i r eip
i r 
ni
i r 
r
set $eip=0xf76357e0
set $esp=0xf76357e0
ni
r
pd execve
set $esp=0xf75d67e0
set $eip=0xf75d67e0
i r eip
x/wx $esp+10
ni
ni
ni
q
b *vuln+0
r
p execve
info proc map
find "/bin/sh"
p/x 0xf7671a0b-0xf7516000
p kernel_sigreturn
p __kernel_sigreturn
pd __kernel_sigreturn
p/x 0xf76e0b30-0xf7516000
q
q
vmap
vmmap
b *vuln+70
b *vuln+0
c
r
vmmap
info proc map
q
pd vuln
b *vuln+70
r
r<<<$(python -c 'print "A"*66')
r<<<(python -c 'print "A"*66')
r<<$(python -c 'print "A"*66')
r<$(python -c 'print "A"*66')
r <<<$(python -c 'print "A"*66')
x/16wx $esp
x/16wx $esp-4
pd sigreturn
p ksigreturn
p kernel
p kernel_sigreturn
p __kernel_sigreturn
x/4i 0xf77bbb30
set *0xfff8184c=0xf77bbb30
x/16wx $esp
i r eip
ni
ni
ni
ni
r <<<$(python -c 'print "A"*66+"BBBB"+"CCCC"+"DDDD"+""')
set *0xfff8184c=0xf77bbb30
set *0xffd762dc=0xf77bbb30
ni
r
p __kernel_sigreturn
q
b *vuln+0
r
q
b *vuln+0
r
ropsearch "int 0x80"
:q
ropsearch "int 0x80;"
ropsearch "int 0x80"
q
q
b *vuln+0
r
p __kernel_sigreturn
pd __kernel_sigreturn
r
pd __kernel_sigreturn
q
:q
q
b *vuln+70
p __kernel_sigreturn
r
p __kernel_sigreturn
set eip=0xf77ceb30
set $eip=0xf77ceb30
i r
ni
i r 
ni
ni
i r 
ni
r
p __kernel_sigreturn
set $eip=0xf76fab30
ni
i r
q
b *vuln+0
c
r
p __kernel_sigreturn
info proc mmap
info proc nmap
info proc map
p/x 0xf7756b30-0xf758c000
q
pd syscall
b *vuln+0
r
pd syscall
q
b *vuln+0
r
ropgadget 
x/4i 0x8048699
q
